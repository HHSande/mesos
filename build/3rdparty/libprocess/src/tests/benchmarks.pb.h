// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: benchmarks.proto

#ifndef PROTOBUF_benchmarks_2eproto__INCLUDED
#define PROTOBUF_benchmarks_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_benchmarks_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMessageImpl();
void InitDefaultsMessage();
inline void InitDefaults() {
  InitDefaultsMessage();
}
}  // namespace protobuf_benchmarks_2eproto
namespace tests {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace tests
namespace tests {

// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Message* other);
  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  protected:
  explicit Message(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 payload = 1;
  int payload_size() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  ::google::protobuf::int32 payload(int index) const;
  void set_payload(int index, ::google::protobuf::int32 value);
  void add_payload(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      payload() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_payload();

  // repeated .tests.Message submessages = 2;
  int submessages_size() const;
  void clear_submessages();
  static const int kSubmessagesFieldNumber = 2;
  const ::tests::Message& submessages(int index) const;
  ::tests::Message* mutable_submessages(int index);
  ::tests::Message* add_submessages();
  ::google::protobuf::RepeatedPtrField< ::tests::Message >*
      mutable_submessages();
  const ::google::protobuf::RepeatedPtrField< ::tests::Message >&
      submessages() const;

  // @@protoc_insertion_point(class_scope:tests.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > payload_;
  ::google::protobuf::RepeatedPtrField< ::tests::Message > submessages_;
  friend struct ::protobuf_benchmarks_2eproto::TableStruct;
  friend void ::protobuf_benchmarks_2eproto::InitDefaultsMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message

// repeated int32 payload = 1;
inline int Message::payload_size() const {
  return payload_.size();
}
inline void Message::clear_payload() {
  payload_.Clear();
}
inline ::google::protobuf::int32 Message::payload(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.payload)
  return payload_.Get(index);
}
inline void Message::set_payload(int index, ::google::protobuf::int32 value) {
  payload_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.payload)
}
inline void Message::add_payload(::google::protobuf::int32 value) {
  payload_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.payload)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message::payload() const {
  // @@protoc_insertion_point(field_list:tests.Message.payload)
  return payload_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.payload)
  return &payload_;
}

// repeated .tests.Message submessages = 2;
inline int Message::submessages_size() const {
  return submessages_.size();
}
inline void Message::clear_submessages() {
  submessages_.Clear();
}
inline const ::tests::Message& Message::submessages(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.submessages)
  return submessages_.Get(index);
}
inline ::tests::Message* Message::mutable_submessages(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.submessages)
  return submessages_.Mutable(index);
}
inline ::tests::Message* Message::add_submessages() {
  // @@protoc_insertion_point(field_add:tests.Message.submessages)
  return submessages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tests::Message >*
Message::mutable_submessages() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.submessages)
  return &submessages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tests::Message >&
Message::submessages() const {
  // @@protoc_insertion_point(field_list:tests.Message.submessages)
  return submessages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace tests

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_benchmarks_2eproto__INCLUDED
