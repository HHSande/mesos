// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_tests.proto

#ifndef PROTOBUF_protobuf_5ftests_2eproto__INCLUDED
#define PROTOBUF_protobuf_5ftests_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_protobuf_5ftests_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[26];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsNestedImpl();
void InitDefaultsNested();
void InitDefaultsSimpleMessageImpl();
void InitDefaultsSimpleMessage();
void InitDefaultsMessageImpl();
void InitDefaultsMessage();
void InitDefaultsArrayMessageImpl();
void InitDefaultsArrayMessage();
void InitDefaultsEnumMessageImpl();
void InitDefaultsEnumMessage();
void InitDefaultsMapMessage_StringToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToStringEntry_DoNotUse();
void InitDefaultsMapMessage_StringToBoolEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToBoolEntry_DoNotUse();
void InitDefaultsMapMessage_StringToBytesEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToBytesEntry_DoNotUse();
void InitDefaultsMapMessage_StringToInt32Entry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToInt32Entry_DoNotUse();
void InitDefaultsMapMessage_StringToInt64Entry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToInt64Entry_DoNotUse();
void InitDefaultsMapMessage_StringToUint32Entry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToUint32Entry_DoNotUse();
void InitDefaultsMapMessage_StringToUint64Entry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToUint64Entry_DoNotUse();
void InitDefaultsMapMessage_StringToSint32Entry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToSint32Entry_DoNotUse();
void InitDefaultsMapMessage_StringToSint64Entry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToSint64Entry_DoNotUse();
void InitDefaultsMapMessage_StringToFloatEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToFloatEntry_DoNotUse();
void InitDefaultsMapMessage_StringToDoubleEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToDoubleEntry_DoNotUse();
void InitDefaultsMapMessage_StringToEnumEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToEnumEntry_DoNotUse();
void InitDefaultsMapMessage_StringToNestedEntry_DoNotUseImpl();
void InitDefaultsMapMessage_StringToNestedEntry_DoNotUse();
void InitDefaultsMapMessage_BoolToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_BoolToStringEntry_DoNotUse();
void InitDefaultsMapMessage_Int32ToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_Int32ToStringEntry_DoNotUse();
void InitDefaultsMapMessage_Int64ToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_Int64ToStringEntry_DoNotUse();
void InitDefaultsMapMessage_Uint32ToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_Uint32ToStringEntry_DoNotUse();
void InitDefaultsMapMessage_Uint64ToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_Uint64ToStringEntry_DoNotUse();
void InitDefaultsMapMessage_Sint32ToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_Sint32ToStringEntry_DoNotUse();
void InitDefaultsMapMessage_Sint64ToStringEntry_DoNotUseImpl();
void InitDefaultsMapMessage_Sint64ToStringEntry_DoNotUse();
void InitDefaultsMapMessageImpl();
void InitDefaultsMapMessage();
inline void InitDefaults() {
  InitDefaultsNested();
  InitDefaultsSimpleMessage();
  InitDefaultsMessage();
  InitDefaultsArrayMessage();
  InitDefaultsEnumMessage();
  InitDefaultsMapMessage_StringToStringEntry_DoNotUse();
  InitDefaultsMapMessage_StringToBoolEntry_DoNotUse();
  InitDefaultsMapMessage_StringToBytesEntry_DoNotUse();
  InitDefaultsMapMessage_StringToInt32Entry_DoNotUse();
  InitDefaultsMapMessage_StringToInt64Entry_DoNotUse();
  InitDefaultsMapMessage_StringToUint32Entry_DoNotUse();
  InitDefaultsMapMessage_StringToUint64Entry_DoNotUse();
  InitDefaultsMapMessage_StringToSint32Entry_DoNotUse();
  InitDefaultsMapMessage_StringToSint64Entry_DoNotUse();
  InitDefaultsMapMessage_StringToFloatEntry_DoNotUse();
  InitDefaultsMapMessage_StringToDoubleEntry_DoNotUse();
  InitDefaultsMapMessage_StringToEnumEntry_DoNotUse();
  InitDefaultsMapMessage_StringToNestedEntry_DoNotUse();
  InitDefaultsMapMessage_BoolToStringEntry_DoNotUse();
  InitDefaultsMapMessage_Int32ToStringEntry_DoNotUse();
  InitDefaultsMapMessage_Int64ToStringEntry_DoNotUse();
  InitDefaultsMapMessage_Uint32ToStringEntry_DoNotUse();
  InitDefaultsMapMessage_Uint64ToStringEntry_DoNotUse();
  InitDefaultsMapMessage_Sint32ToStringEntry_DoNotUse();
  InitDefaultsMapMessage_Sint64ToStringEntry_DoNotUse();
  InitDefaultsMapMessage();
}
}  // namespace protobuf_protobuf_5ftests_2eproto
namespace tests {
class ArrayMessage;
class ArrayMessageDefaultTypeInternal;
extern ArrayMessageDefaultTypeInternal _ArrayMessage_default_instance_;
class EnumMessage;
class EnumMessageDefaultTypeInternal;
extern EnumMessageDefaultTypeInternal _EnumMessage_default_instance_;
class MapMessage;
class MapMessageDefaultTypeInternal;
extern MapMessageDefaultTypeInternal _MapMessage_default_instance_;
class MapMessage_BoolToStringEntry_DoNotUse;
class MapMessage_BoolToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_BoolToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_BoolToStringEntry_DoNotUse_default_instance_;
class MapMessage_Int32ToStringEntry_DoNotUse;
class MapMessage_Int32ToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_Int32ToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_Int32ToStringEntry_DoNotUse_default_instance_;
class MapMessage_Int64ToStringEntry_DoNotUse;
class MapMessage_Int64ToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_Int64ToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_Int64ToStringEntry_DoNotUse_default_instance_;
class MapMessage_Sint32ToStringEntry_DoNotUse;
class MapMessage_Sint32ToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_Sint32ToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_Sint32ToStringEntry_DoNotUse_default_instance_;
class MapMessage_Sint64ToStringEntry_DoNotUse;
class MapMessage_Sint64ToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_Sint64ToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_Sint64ToStringEntry_DoNotUse_default_instance_;
class MapMessage_StringToBoolEntry_DoNotUse;
class MapMessage_StringToBoolEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToBoolEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToBoolEntry_DoNotUse_default_instance_;
class MapMessage_StringToBytesEntry_DoNotUse;
class MapMessage_StringToBytesEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToBytesEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToBytesEntry_DoNotUse_default_instance_;
class MapMessage_StringToDoubleEntry_DoNotUse;
class MapMessage_StringToDoubleEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToDoubleEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToDoubleEntry_DoNotUse_default_instance_;
class MapMessage_StringToEnumEntry_DoNotUse;
class MapMessage_StringToEnumEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToEnumEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToEnumEntry_DoNotUse_default_instance_;
class MapMessage_StringToFloatEntry_DoNotUse;
class MapMessage_StringToFloatEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToFloatEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToFloatEntry_DoNotUse_default_instance_;
class MapMessage_StringToInt32Entry_DoNotUse;
class MapMessage_StringToInt32Entry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToInt32Entry_DoNotUseDefaultTypeInternal _MapMessage_StringToInt32Entry_DoNotUse_default_instance_;
class MapMessage_StringToInt64Entry_DoNotUse;
class MapMessage_StringToInt64Entry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToInt64Entry_DoNotUseDefaultTypeInternal _MapMessage_StringToInt64Entry_DoNotUse_default_instance_;
class MapMessage_StringToNestedEntry_DoNotUse;
class MapMessage_StringToNestedEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToNestedEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToNestedEntry_DoNotUse_default_instance_;
class MapMessage_StringToSint32Entry_DoNotUse;
class MapMessage_StringToSint32Entry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToSint32Entry_DoNotUseDefaultTypeInternal _MapMessage_StringToSint32Entry_DoNotUse_default_instance_;
class MapMessage_StringToSint64Entry_DoNotUse;
class MapMessage_StringToSint64Entry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToSint64Entry_DoNotUseDefaultTypeInternal _MapMessage_StringToSint64Entry_DoNotUse_default_instance_;
class MapMessage_StringToStringEntry_DoNotUse;
class MapMessage_StringToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_StringToStringEntry_DoNotUse_default_instance_;
class MapMessage_StringToUint32Entry_DoNotUse;
class MapMessage_StringToUint32Entry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToUint32Entry_DoNotUseDefaultTypeInternal _MapMessage_StringToUint32Entry_DoNotUse_default_instance_;
class MapMessage_StringToUint64Entry_DoNotUse;
class MapMessage_StringToUint64Entry_DoNotUseDefaultTypeInternal;
extern MapMessage_StringToUint64Entry_DoNotUseDefaultTypeInternal _MapMessage_StringToUint64Entry_DoNotUse_default_instance_;
class MapMessage_Uint32ToStringEntry_DoNotUse;
class MapMessage_Uint32ToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_Uint32ToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_Uint32ToStringEntry_DoNotUse_default_instance_;
class MapMessage_Uint64ToStringEntry_DoNotUse;
class MapMessage_Uint64ToStringEntry_DoNotUseDefaultTypeInternal;
extern MapMessage_Uint64ToStringEntry_DoNotUseDefaultTypeInternal _MapMessage_Uint64ToStringEntry_DoNotUse_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Nested;
class NestedDefaultTypeInternal;
extern NestedDefaultTypeInternal _Nested_default_instance_;
class SimpleMessage;
class SimpleMessageDefaultTypeInternal;
extern SimpleMessageDefaultTypeInternal _SimpleMessage_default_instance_;
}  // namespace tests
namespace tests {

enum Enum {
  UNKNOWN = 0,
  ONE = 1,
  TWO = 2
};
bool Enum_IsValid(int value);
const Enum Enum_MIN = UNKNOWN;
const Enum Enum_MAX = TWO;
const int Enum_ARRAYSIZE = Enum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Enum_descriptor();
inline const ::std::string& Enum_Name(Enum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Enum_descriptor(), value);
}
inline bool Enum_Parse(
    const ::std::string& name, Enum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Enum>(
    Enum_descriptor(), name, value);
}
// ===================================================================

class Nested : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.Nested) */ {
 public:
  Nested();
  virtual ~Nested();

  Nested(const Nested& from);

  inline Nested& operator=(const Nested& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Nested(Nested&& from) noexcept
    : Nested() {
    *this = ::std::move(from);
  }

  inline Nested& operator=(Nested&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Nested& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Nested* internal_default_instance() {
    return reinterpret_cast<const Nested*>(
               &_Nested_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Nested* other);
  friend void swap(Nested& a, Nested& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Nested* New() const PROTOBUF_FINAL { return New(NULL); }

  Nested* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Nested& from);
  void MergeFrom(const Nested& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Nested* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string repeated_str = 3;
  int repeated_str_size() const;
  void clear_repeated_str();
  static const int kRepeatedStrFieldNumber = 3;
  const ::std::string& repeated_str(int index) const;
  ::std::string* mutable_repeated_str(int index);
  void set_repeated_str(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeated_str(int index, ::std::string&& value);
  #endif
  void set_repeated_str(int index, const char* value);
  void set_repeated_str(int index, const char* value, size_t size);
  ::std::string* add_repeated_str();
  void add_repeated_str(const ::std::string& value);
  #if LANG_CXX11
  void add_repeated_str(::std::string&& value);
  #endif
  void add_repeated_str(const char* value);
  void add_repeated_str(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_str() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_str();

  // required string str = 1;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional string optional_str = 2;
  bool has_optional_str() const;
  void clear_optional_str();
  static const int kOptionalStrFieldNumber = 2;
  const ::std::string& optional_str() const;
  void set_optional_str(const ::std::string& value);
  #if LANG_CXX11
  void set_optional_str(::std::string&& value);
  #endif
  void set_optional_str(const char* value);
  void set_optional_str(const char* value, size_t size);
  ::std::string* mutable_optional_str();
  ::std::string* release_optional_str();
  void set_allocated_optional_str(::std::string* optional_str);

  // @@protoc_insertion_point(class_scope:tests.Nested)
 private:
  void set_has_str();
  void clear_has_str();
  void set_has_optional_str();
  void clear_has_optional_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_str_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr optional_str_;
  friend struct ::protobuf_protobuf_5ftests_2eproto::TableStruct;
  friend void ::protobuf_protobuf_5ftests_2eproto::InitDefaultsNestedImpl();
};
// -------------------------------------------------------------------

class SimpleMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.SimpleMessage) */ {
 public:
  SimpleMessage();
  virtual ~SimpleMessage();

  SimpleMessage(const SimpleMessage& from);

  inline SimpleMessage& operator=(const SimpleMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SimpleMessage(SimpleMessage&& from) noexcept
    : SimpleMessage() {
    *this = ::std::move(from);
  }

  inline SimpleMessage& operator=(SimpleMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SimpleMessage* internal_default_instance() {
    return reinterpret_cast<const SimpleMessage*>(
               &_SimpleMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SimpleMessage* other);
  friend void swap(SimpleMessage& a, SimpleMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SimpleMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SimpleMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SimpleMessage& from);
  void MergeFrom(const SimpleMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SimpleMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 numbers = 2;
  int numbers_size() const;
  void clear_numbers();
  static const int kNumbersFieldNumber = 2;
  ::google::protobuf::int32 numbers(int index) const;
  void set_numbers(int index, ::google::protobuf::int32 value);
  void add_numbers(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      numbers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_numbers();

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:tests.SimpleMessage)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > numbers_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct ::protobuf_protobuf_5ftests_2eproto::TableStruct;
  friend void ::protobuf_protobuf_5ftests_2eproto::InitDefaultsSimpleMessageImpl();
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string repeated_string = 13;
  int repeated_string_size() const;
  void clear_repeated_string();
  static const int kRepeatedStringFieldNumber = 13;
  const ::std::string& repeated_string(int index) const;
  ::std::string* mutable_repeated_string(int index);
  void set_repeated_string(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeated_string(int index, ::std::string&& value);
  #endif
  void set_repeated_string(int index, const char* value);
  void set_repeated_string(int index, const char* value, size_t size);
  ::std::string* add_repeated_string();
  void add_repeated_string(const ::std::string& value);
  #if LANG_CXX11
  void add_repeated_string(::std::string&& value);
  #endif
  void add_repeated_string(const char* value);
  void add_repeated_string(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_string() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_string();

  // repeated bytes repeated_bytes = 14;
  int repeated_bytes_size() const;
  void clear_repeated_bytes();
  static const int kRepeatedBytesFieldNumber = 14;
  const ::std::string& repeated_bytes(int index) const;
  ::std::string* mutable_repeated_bytes(int index);
  void set_repeated_bytes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeated_bytes(int index, ::std::string&& value);
  #endif
  void set_repeated_bytes(int index, const char* value);
  void set_repeated_bytes(int index, const void* value, size_t size);
  ::std::string* add_repeated_bytes();
  void add_repeated_bytes(const ::std::string& value);
  #if LANG_CXX11
  void add_repeated_bytes(::std::string&& value);
  #endif
  void add_repeated_bytes(const char* value);
  void add_repeated_bytes(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeated_bytes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeated_bytes();

  // repeated int32 repeated_int32 = 15;
  int repeated_int32_size() const;
  void clear_repeated_int32();
  static const int kRepeatedInt32FieldNumber = 15;
  ::google::protobuf::int32 repeated_int32(int index) const;
  void set_repeated_int32(int index, ::google::protobuf::int32 value);
  void add_repeated_int32(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeated_int32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeated_int32();

  // repeated int64 repeated_int64 = 16;
  int repeated_int64_size() const;
  void clear_repeated_int64();
  static const int kRepeatedInt64FieldNumber = 16;
  ::google::protobuf::int64 repeated_int64(int index) const;
  void set_repeated_int64(int index, ::google::protobuf::int64 value);
  void add_repeated_int64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      repeated_int64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_repeated_int64();

  // repeated uint32 repeated_uint32 = 17;
  int repeated_uint32_size() const;
  void clear_repeated_uint32();
  static const int kRepeatedUint32FieldNumber = 17;
  ::google::protobuf::uint32 repeated_uint32(int index) const;
  void set_repeated_uint32(int index, ::google::protobuf::uint32 value);
  void add_repeated_uint32(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      repeated_uint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_repeated_uint32();

  // repeated uint64 repeated_uint64 = 18;
  int repeated_uint64_size() const;
  void clear_repeated_uint64();
  static const int kRepeatedUint64FieldNumber = 18;
  ::google::protobuf::uint64 repeated_uint64(int index) const;
  void set_repeated_uint64(int index, ::google::protobuf::uint64 value);
  void add_repeated_uint64(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      repeated_uint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_repeated_uint64();

  // repeated sint32 repeated_sint32 = 19;
  int repeated_sint32_size() const;
  void clear_repeated_sint32();
  static const int kRepeatedSint32FieldNumber = 19;
  ::google::protobuf::int32 repeated_sint32(int index) const;
  void set_repeated_sint32(int index, ::google::protobuf::int32 value);
  void add_repeated_sint32(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      repeated_sint32() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_repeated_sint32();

  // repeated sint64 repeated_sint64 = 20;
  int repeated_sint64_size() const;
  void clear_repeated_sint64();
  static const int kRepeatedSint64FieldNumber = 20;
  ::google::protobuf::int64 repeated_sint64(int index) const;
  void set_repeated_sint64(int index, ::google::protobuf::int64 value);
  void add_repeated_sint64(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      repeated_sint64() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_repeated_sint64();

  // repeated float repeated_float = 21;
  int repeated_float_size() const;
  void clear_repeated_float();
  static const int kRepeatedFloatFieldNumber = 21;
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::google::protobuf::RepeatedField< float >&
      repeated_float() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_repeated_float();

  // repeated double repeated_double = 22;
  int repeated_double_size() const;
  void clear_repeated_double();
  static const int kRepeatedDoubleFieldNumber = 22;
  double repeated_double(int index) const;
  void set_repeated_double(int index, double value);
  void add_repeated_double(double value);
  const ::google::protobuf::RepeatedField< double >&
      repeated_double() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_repeated_double();

  // repeated .tests.Enum repeated_enum = 23;
  int repeated_enum_size() const;
  void clear_repeated_enum();
  static const int kRepeatedEnumFieldNumber = 23;
  ::tests::Enum repeated_enum(int index) const;
  void set_repeated_enum(int index, ::tests::Enum value);
  void add_repeated_enum(::tests::Enum value);
  const ::google::protobuf::RepeatedField<int>& repeated_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_enum();

  // repeated .tests.Nested repeated_nested = 24;
  int repeated_nested_size() const;
  void clear_repeated_nested();
  static const int kRepeatedNestedFieldNumber = 24;
  const ::tests::Nested& repeated_nested(int index) const;
  ::tests::Nested* mutable_repeated_nested(int index);
  ::tests::Nested* add_repeated_nested();
  ::google::protobuf::RepeatedPtrField< ::tests::Nested >*
      mutable_repeated_nested();
  const ::google::protobuf::RepeatedPtrField< ::tests::Nested >&
      repeated_nested() const;

  // repeated string empty = 25;
  int empty_size() const;
  void clear_empty();
  static const int kEmptyFieldNumber = 25;
  const ::std::string& empty(int index) const;
  ::std::string* mutable_empty(int index);
  void set_empty(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_empty(int index, ::std::string&& value);
  #endif
  void set_empty(int index, const char* value);
  void set_empty(int index, const char* value, size_t size);
  ::std::string* add_empty();
  void add_empty(const ::std::string& value);
  #if LANG_CXX11
  void add_empty(::std::string&& value);
  #endif
  void add_empty(const char* value);
  void add_empty(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& empty() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_empty();

  // repeated bool repeated_bool = 27;
  int repeated_bool_size() const;
  void clear_repeated_bool();
  static const int kRepeatedBoolFieldNumber = 27;
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      repeated_bool() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_repeated_bool();

  // required string str = 1;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // required bytes bytes = 2;
  bool has_bytes() const;
  void clear_bytes();
  static const int kBytesFieldNumber = 2;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // required .tests.Nested nested = 12;
  bool has_nested() const;
  void clear_nested();
  static const int kNestedFieldNumber = 12;
  const ::tests::Nested& nested() const;
  ::tests::Nested* release_nested();
  ::tests::Nested* mutable_nested();
  void set_allocated_nested(::tests::Nested* nested);

  // optional int64 int64 = 4;
  bool has_int64() const;
  void clear_int64();
  static const int kInt64FieldNumber = 4;
  ::google::protobuf::int64 int64() const;
  void set_int64(::google::protobuf::int64 value);

  // optional int32 int32 = 3;
  bool has_int32() const;
  void clear_int32();
  static const int kInt32FieldNumber = 3;
  ::google::protobuf::int32 int32() const;
  void set_int32(::google::protobuf::int32 value);

  // optional uint32 uint32 = 5;
  bool has_uint32() const;
  void clear_uint32();
  static const int kUint32FieldNumber = 5;
  ::google::protobuf::uint32 uint32() const;
  void set_uint32(::google::protobuf::uint32 value);

  // optional uint64 uint64 = 6;
  bool has_uint64() const;
  void clear_uint64();
  static const int kUint64FieldNumber = 6;
  ::google::protobuf::uint64 uint64() const;
  void set_uint64(::google::protobuf::uint64 value);

  // optional sint64 sint64 = 8;
  bool has_sint64() const;
  void clear_sint64();
  static const int kSint64FieldNumber = 8;
  ::google::protobuf::int64 sint64() const;
  void set_sint64(::google::protobuf::int64 value);

  // optional sint32 sint32 = 7;
  bool has_sint32() const;
  void clear_sint32();
  static const int kSint32FieldNumber = 7;
  ::google::protobuf::int32 sint32() const;
  void set_sint32(::google::protobuf::int32 value);

  // required float f = 9;
  bool has_f() const;
  void clear_f();
  static const int kFFieldNumber = 9;
  float f() const;
  void set_f(float value);

  // required double d = 10;
  bool has_d() const;
  void clear_d();
  static const int kDFieldNumber = 10;
  double d() const;
  void set_d(double value);

  // required .tests.Enum e = 11;
  bool has_e() const;
  void clear_e();
  static const int kEFieldNumber = 11;
  ::tests::Enum e() const;
  void set_e(::tests::Enum value);

  // required bool b = 26;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 26;
  bool b() const;
  void set_b(bool value);

  // optional double optional_no_default = 29;
  bool has_optional_no_default() const;
  void clear_optional_no_default();
  static const int kOptionalNoDefaultFieldNumber = 29;
  double optional_no_default() const;
  void set_optional_no_default(double value);

  // optional double optional_default = 28 [default = 42];
  bool has_optional_default() const;
  void clear_optional_default();
  static const int kOptionalDefaultFieldNumber = 28;
  double optional_default() const;
  void set_optional_default(double value);

  // @@protoc_insertion_point(class_scope:tests.Message)
 private:
  void set_has_b();
  void clear_has_b();
  void set_has_str();
  void clear_has_str();
  void set_has_bytes();
  void clear_has_bytes();
  void set_has_int32();
  void clear_has_int32();
  void set_has_int64();
  void clear_has_int64();
  void set_has_uint32();
  void clear_has_uint32();
  void set_has_uint64();
  void clear_has_uint64();
  void set_has_sint32();
  void clear_has_sint32();
  void set_has_sint64();
  void clear_has_sint64();
  void set_has_f();
  void clear_has_f();
  void set_has_d();
  void clear_has_d();
  void set_has_e();
  void clear_has_e();
  void set_has_nested();
  void clear_has_nested();
  void set_has_optional_default();
  void clear_has_optional_default();
  void set_has_optional_no_default();
  void clear_has_optional_no_default();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_string_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeated_bytes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeated_int32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > repeated_int64_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > repeated_uint32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > repeated_uint64_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > repeated_sint32_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > repeated_sint64_;
  ::google::protobuf::RepeatedField< float > repeated_float_;
  ::google::protobuf::RepeatedField< double > repeated_double_;
  ::google::protobuf::RepeatedField<int> repeated_enum_;
  ::google::protobuf::RepeatedPtrField< ::tests::Nested > repeated_nested_;
  ::google::protobuf::RepeatedPtrField< ::std::string> empty_;
  ::google::protobuf::RepeatedField< bool > repeated_bool_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::tests::Nested* nested_;
  ::google::protobuf::int64 int64_;
  ::google::protobuf::int32 int32_;
  ::google::protobuf::uint32 uint32_;
  ::google::protobuf::uint64 uint64_;
  ::google::protobuf::int64 sint64_;
  ::google::protobuf::int32 sint32_;
  float f_;
  double d_;
  int e_;
  bool b_;
  double optional_no_default_;
  double optional_default_;
  friend struct ::protobuf_protobuf_5ftests_2eproto::TableStruct;
  friend void ::protobuf_protobuf_5ftests_2eproto::InitDefaultsMessageImpl();
};
// -------------------------------------------------------------------

class ArrayMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.ArrayMessage) */ {
 public:
  ArrayMessage();
  virtual ~ArrayMessage();

  ArrayMessage(const ArrayMessage& from);

  inline ArrayMessage& operator=(const ArrayMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArrayMessage(ArrayMessage&& from) noexcept
    : ArrayMessage() {
    *this = ::std::move(from);
  }

  inline ArrayMessage& operator=(ArrayMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArrayMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayMessage* internal_default_instance() {
    return reinterpret_cast<const ArrayMessage*>(
               &_ArrayMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ArrayMessage* other);
  friend void swap(ArrayMessage& a, ArrayMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArrayMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ArrayMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArrayMessage& from);
  void MergeFrom(const ArrayMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArrayMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tests.SimpleMessage values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  const ::tests::SimpleMessage& values(int index) const;
  ::tests::SimpleMessage* mutable_values(int index);
  ::tests::SimpleMessage* add_values();
  ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >*
      mutable_values();
  const ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >&
      values() const;

  // @@protoc_insertion_point(class_scope:tests.ArrayMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage > values_;
  friend struct ::protobuf_protobuf_5ftests_2eproto::TableStruct;
  friend void ::protobuf_protobuf_5ftests_2eproto::InitDefaultsArrayMessageImpl();
};
// -------------------------------------------------------------------

class EnumMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.EnumMessage) */ {
 public:
  EnumMessage();
  virtual ~EnumMessage();

  EnumMessage(const EnumMessage& from);

  inline EnumMessage& operator=(const EnumMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnumMessage(EnumMessage&& from) noexcept
    : EnumMessage() {
    *this = ::std::move(from);
  }

  inline EnumMessage& operator=(EnumMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnumMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnumMessage* internal_default_instance() {
    return reinterpret_cast<const EnumMessage*>(
               &_EnumMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EnumMessage* other);
  friend void swap(EnumMessage& a, EnumMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnumMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  EnumMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnumMessage& from);
  void MergeFrom(const EnumMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnumMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tests.Enum repeated_enum = 3;
  int repeated_enum_size() const;
  void clear_repeated_enum();
  static const int kRepeatedEnumFieldNumber = 3;
  ::tests::Enum repeated_enum(int index) const;
  void set_repeated_enum(int index, ::tests::Enum value);
  void add_repeated_enum(::tests::Enum value);
  const ::google::protobuf::RepeatedField<int>& repeated_enum() const;
  ::google::protobuf::RepeatedField<int>* mutable_repeated_enum();

  // optional .tests.Enum e1 = 1;
  bool has_e1() const;
  void clear_e1();
  static const int kE1FieldNumber = 1;
  ::tests::Enum e1() const;
  void set_e1(::tests::Enum value);

  // optional .tests.Enum e2 = 2;
  bool has_e2() const;
  void clear_e2();
  static const int kE2FieldNumber = 2;
  ::tests::Enum e2() const;
  void set_e2(::tests::Enum value);

  // @@protoc_insertion_point(class_scope:tests.EnumMessage)
 private:
  void set_has_e1();
  void clear_has_e1();
  void set_has_e2();
  void clear_has_e2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> repeated_enum_;
  int e1_;
  int e2_;
  friend struct ::protobuf_protobuf_5ftests_2eproto::TableStruct;
  friend void ::protobuf_protobuf_5ftests_2eproto::InitDefaultsEnumMessageImpl();
};
// -------------------------------------------------------------------

class MapMessage_StringToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToStringEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToStringEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_StringToStringEntry_DoNotUse();
  MapMessage_StringToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToStringEntry_DoNotUse& other);
  static const MapMessage_StringToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToStringEntry_DoNotUse*>(&_MapMessage_StringToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToBoolEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToBoolEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToBoolEntry_DoNotUse, 
    ::std::string, bool,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    0 > SuperType;
  MapMessage_StringToBoolEntry_DoNotUse();
  MapMessage_StringToBoolEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToBoolEntry_DoNotUse& other);
  static const MapMessage_StringToBoolEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToBoolEntry_DoNotUse*>(&_MapMessage_StringToBoolEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToBytesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToBytesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToBytesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  MapMessage_StringToBytesEntry_DoNotUse();
  MapMessage_StringToBytesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToBytesEntry_DoNotUse& other);
  static const MapMessage_StringToBytesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToBytesEntry_DoNotUse*>(&_MapMessage_StringToBytesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToInt32Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToInt32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToInt32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  MapMessage_StringToInt32Entry_DoNotUse();
  MapMessage_StringToInt32Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToInt32Entry_DoNotUse& other);
  static const MapMessage_StringToInt32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToInt32Entry_DoNotUse*>(&_MapMessage_StringToInt32Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToInt64Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToInt64Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToInt64Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    0 > SuperType;
  MapMessage_StringToInt64Entry_DoNotUse();
  MapMessage_StringToInt64Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToInt64Entry_DoNotUse& other);
  static const MapMessage_StringToInt64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToInt64Entry_DoNotUse*>(&_MapMessage_StringToInt64Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToUint32Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToUint32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToUint32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > SuperType;
  MapMessage_StringToUint32Entry_DoNotUse();
  MapMessage_StringToUint32Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToUint32Entry_DoNotUse& other);
  static const MapMessage_StringToUint32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToUint32Entry_DoNotUse*>(&_MapMessage_StringToUint32Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToUint64Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToUint64Entry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToUint64Entry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  MapMessage_StringToUint64Entry_DoNotUse();
  MapMessage_StringToUint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToUint64Entry_DoNotUse& other);
  static const MapMessage_StringToUint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToUint64Entry_DoNotUse*>(&_MapMessage_StringToUint64Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToSint32Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToSint32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToSint32Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
    0 > SuperType;
  MapMessage_StringToSint32Entry_DoNotUse();
  MapMessage_StringToSint32Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToSint32Entry_DoNotUse& other);
  static const MapMessage_StringToSint32Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToSint32Entry_DoNotUse*>(&_MapMessage_StringToSint32Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToSint64Entry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToSint64Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToSint64Entry_DoNotUse, 
    ::std::string, ::google::protobuf::int64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
    0 > SuperType;
  MapMessage_StringToSint64Entry_DoNotUse();
  MapMessage_StringToSint64Entry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToSint64Entry_DoNotUse& other);
  static const MapMessage_StringToSint64Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToSint64Entry_DoNotUse*>(&_MapMessage_StringToSint64Entry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToFloatEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToFloatEntry_DoNotUse, 
    ::std::string, float,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToFloatEntry_DoNotUse, 
    ::std::string, float,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
    0 > SuperType;
  MapMessage_StringToFloatEntry_DoNotUse();
  MapMessage_StringToFloatEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToFloatEntry_DoNotUse& other);
  static const MapMessage_StringToFloatEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToFloatEntry_DoNotUse*>(&_MapMessage_StringToFloatEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToDoubleEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToDoubleEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToDoubleEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  MapMessage_StringToDoubleEntry_DoNotUse();
  MapMessage_StringToDoubleEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToDoubleEntry_DoNotUse& other);
  static const MapMessage_StringToDoubleEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToDoubleEntry_DoNotUse*>(&_MapMessage_StringToDoubleEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToEnumEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToEnumEntry_DoNotUse, 
    ::std::string, ::tests::Enum,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToEnumEntry_DoNotUse, 
    ::std::string, ::tests::Enum,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
    0 > SuperType;
  MapMessage_StringToEnumEntry_DoNotUse();
  MapMessage_StringToEnumEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToEnumEntry_DoNotUse& other);
  static const MapMessage_StringToEnumEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToEnumEntry_DoNotUse*>(&_MapMessage_StringToEnumEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_StringToNestedEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_StringToNestedEntry_DoNotUse, 
    ::std::string, ::tests::Nested,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_StringToNestedEntry_DoNotUse, 
    ::std::string, ::tests::Nested,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  MapMessage_StringToNestedEntry_DoNotUse();
  MapMessage_StringToNestedEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_StringToNestedEntry_DoNotUse& other);
  static const MapMessage_StringToNestedEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_StringToNestedEntry_DoNotUse*>(&_MapMessage_StringToNestedEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_BoolToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_BoolToStringEntry_DoNotUse, 
    bool, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_BoolToStringEntry_DoNotUse, 
    bool, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_BoolToStringEntry_DoNotUse();
  MapMessage_BoolToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_BoolToStringEntry_DoNotUse& other);
  static const MapMessage_BoolToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_BoolToStringEntry_DoNotUse*>(&_MapMessage_BoolToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_Int32ToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_Int32ToStringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_Int32ToStringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_Int32ToStringEntry_DoNotUse();
  MapMessage_Int32ToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_Int32ToStringEntry_DoNotUse& other);
  static const MapMessage_Int32ToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_Int32ToStringEntry_DoNotUse*>(&_MapMessage_Int32ToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_Int64ToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_Int64ToStringEntry_DoNotUse, 
    ::google::protobuf::int64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_Int64ToStringEntry_DoNotUse, 
    ::google::protobuf::int64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_Int64ToStringEntry_DoNotUse();
  MapMessage_Int64ToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_Int64ToStringEntry_DoNotUse& other);
  static const MapMessage_Int64ToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_Int64ToStringEntry_DoNotUse*>(&_MapMessage_Int64ToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_Uint32ToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_Uint32ToStringEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_Uint32ToStringEntry_DoNotUse, 
    ::google::protobuf::uint32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_Uint32ToStringEntry_DoNotUse();
  MapMessage_Uint32ToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_Uint32ToStringEntry_DoNotUse& other);
  static const MapMessage_Uint32ToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_Uint32ToStringEntry_DoNotUse*>(&_MapMessage_Uint32ToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_Uint64ToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_Uint64ToStringEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_Uint64ToStringEntry_DoNotUse, 
    ::google::protobuf::uint64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_Uint64ToStringEntry_DoNotUse();
  MapMessage_Uint64ToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_Uint64ToStringEntry_DoNotUse& other);
  static const MapMessage_Uint64ToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_Uint64ToStringEntry_DoNotUse*>(&_MapMessage_Uint64ToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_Sint32ToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_Sint32ToStringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_Sint32ToStringEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_Sint32ToStringEntry_DoNotUse();
  MapMessage_Sint32ToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_Sint32ToStringEntry_DoNotUse& other);
  static const MapMessage_Sint32ToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_Sint32ToStringEntry_DoNotUse*>(&_MapMessage_Sint32ToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage_Sint64ToStringEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MapMessage_Sint64ToStringEntry_DoNotUse, 
    ::google::protobuf::int64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MapMessage_Sint64ToStringEntry_DoNotUse, 
    ::google::protobuf::int64, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  MapMessage_Sint64ToStringEntry_DoNotUse();
  MapMessage_Sint64ToStringEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MapMessage_Sint64ToStringEntry_DoNotUse& other);
  static const MapMessage_Sint64ToStringEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MapMessage_Sint64ToStringEntry_DoNotUse*>(&_MapMessage_Sint64ToStringEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MapMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tests.MapMessage) */ {
 public:
  MapMessage();
  virtual ~MapMessage();

  MapMessage(const MapMessage& from);

  inline MapMessage& operator=(const MapMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapMessage(MapMessage&& from) noexcept
    : MapMessage() {
    *this = ::std::move(from);
  }

  inline MapMessage& operator=(MapMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapMessage* internal_default_instance() {
    return reinterpret_cast<const MapMessage*>(
               &_MapMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(MapMessage* other);
  friend void swap(MapMessage& a, MapMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MapMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapMessage& from);
  void MergeFrom(const MapMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> string_to_string = 1;
  int string_to_string_size() const;
  void clear_string_to_string();
  static const int kStringToStringFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      string_to_string() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_string_to_string();

  // map<string, bool> string_to_bool = 2;
  int string_to_bool_size() const;
  void clear_string_to_bool();
  static const int kStringToBoolFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, bool >&
      string_to_bool() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_string_to_bool();

  // map<string, bytes> string_to_bytes = 3;
  int string_to_bytes_size() const;
  void clear_string_to_bytes();
  static const int kStringToBytesFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      string_to_bytes() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_string_to_bytes();

  // map<string, int32> string_to_int32 = 4;
  int string_to_int32_size() const;
  void clear_string_to_int32();
  static const int kStringToInt32FieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      string_to_int32() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_string_to_int32();

  // map<string, int64> string_to_int64 = 5;
  int string_to_int64_size() const;
  void clear_string_to_int64();
  static const int kStringToInt64FieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      string_to_int64() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_string_to_int64();

  // map<string, uint32> string_to_uint32 = 6;
  int string_to_uint32_size() const;
  void clear_string_to_uint32();
  static const int kStringToUint32FieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
      string_to_uint32() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
      mutable_string_to_uint32();

  // map<string, uint64> string_to_uint64 = 7;
  int string_to_uint64_size() const;
  void clear_string_to_uint64();
  static const int kStringToUint64FieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
      string_to_uint64() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
      mutable_string_to_uint64();

  // map<string, sint32> string_to_sint32 = 8;
  int string_to_sint32_size() const;
  void clear_string_to_sint32();
  static const int kStringToSint32FieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      string_to_sint32() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_string_to_sint32();

  // map<string, sint64> string_to_sint64 = 9;
  int string_to_sint64_size() const;
  void clear_string_to_sint64();
  static const int kStringToSint64FieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      string_to_sint64() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_string_to_sint64();

  // map<string, float> string_to_float = 10;
  int string_to_float_size() const;
  void clear_string_to_float();
  static const int kStringToFloatFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, float >&
      string_to_float() const;
  ::google::protobuf::Map< ::std::string, float >*
      mutable_string_to_float();

  // map<string, double> string_to_double = 11;
  int string_to_double_size() const;
  void clear_string_to_double();
  static const int kStringToDoubleFieldNumber = 11;
  const ::google::protobuf::Map< ::std::string, double >&
      string_to_double() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_string_to_double();

  // map<string, .tests.Enum> string_to_enum = 12;
  int string_to_enum_size() const;
  void clear_string_to_enum();
  static const int kStringToEnumFieldNumber = 12;
  const ::google::protobuf::Map< ::std::string, ::tests::Enum >&
      string_to_enum() const;
  ::google::protobuf::Map< ::std::string, ::tests::Enum >*
      mutable_string_to_enum();

  // map<string, .tests.Nested> string_to_nested = 13;
  int string_to_nested_size() const;
  void clear_string_to_nested();
  static const int kStringToNestedFieldNumber = 13;
  const ::google::protobuf::Map< ::std::string, ::tests::Nested >&
      string_to_nested() const;
  ::google::protobuf::Map< ::std::string, ::tests::Nested >*
      mutable_string_to_nested();

  // map<bool, string> bool_to_string = 14;
  int bool_to_string_size() const;
  void clear_bool_to_string();
  static const int kBoolToStringFieldNumber = 14;
  const ::google::protobuf::Map< bool, ::std::string >&
      bool_to_string() const;
  ::google::protobuf::Map< bool, ::std::string >*
      mutable_bool_to_string();

  // map<int32, string> int32_to_string = 15;
  int int32_to_string_size() const;
  void clear_int32_to_string();
  static const int kInt32ToStringFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      int32_to_string() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_int32_to_string();

  // map<int64, string> int64_to_string = 16;
  int int64_to_string_size() const;
  void clear_int64_to_string();
  static const int kInt64ToStringFieldNumber = 16;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
      int64_to_string() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
      mutable_int64_to_string();

  // map<uint32, string> uint32_to_string = 17;
  int uint32_to_string_size() const;
  void clear_uint32_to_string();
  static const int kUint32ToStringFieldNumber = 17;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      uint32_to_string() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_uint32_to_string();

  // map<uint64, string> uint64_to_string = 18;
  int uint64_to_string_size() const;
  void clear_uint64_to_string();
  static const int kUint64ToStringFieldNumber = 18;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
      uint64_to_string() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
      mutable_uint64_to_string();

  // map<sint32, string> sint32_to_string = 19;
  int sint32_to_string_size() const;
  void clear_sint32_to_string();
  static const int kSint32ToStringFieldNumber = 19;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      sint32_to_string() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_sint32_to_string();

  // map<sint64, string> sint64_to_string = 20;
  int sint64_to_string_size() const;
  void clear_sint64_to_string();
  static const int kSint64ToStringFieldNumber = 20;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
      sint64_to_string() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
      mutable_sint64_to_string();

  // @@protoc_insertion_point(class_scope:tests.MapMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToStringEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > string_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToBoolEntry_DoNotUse,
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > string_to_bool_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToBytesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > string_to_bytes_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToInt32Entry_DoNotUse,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > string_to_int32_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToInt64Entry_DoNotUse,
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > string_to_int64_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToUint32Entry_DoNotUse,
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > string_to_uint32_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToUint64Entry_DoNotUse,
      ::std::string, ::google::protobuf::uint64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      0 > string_to_uint64_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToSint32Entry_DoNotUse,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
      0 > string_to_sint32_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToSint64Entry_DoNotUse,
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
      0 > string_to_sint64_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToFloatEntry_DoNotUse,
      ::std::string, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > string_to_float_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToDoubleEntry_DoNotUse,
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > string_to_double_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToEnumEntry_DoNotUse,
      ::std::string, ::tests::Enum,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > string_to_enum_;
  ::google::protobuf::internal::MapField<
      MapMessage_StringToNestedEntry_DoNotUse,
      ::std::string, ::tests::Nested,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > string_to_nested_;
  ::google::protobuf::internal::MapField<
      MapMessage_BoolToStringEntry_DoNotUse,
      bool, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > bool_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_Int32ToStringEntry_DoNotUse,
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > int32_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_Int64ToStringEntry_DoNotUse,
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > int64_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_Uint32ToStringEntry_DoNotUse,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > uint32_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_Uint64ToStringEntry_DoNotUse,
      ::google::protobuf::uint64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > uint64_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_Sint32ToStringEntry_DoNotUse,
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > sint32_to_string_;
  ::google::protobuf::internal::MapField<
      MapMessage_Sint64ToStringEntry_DoNotUse,
      ::google::protobuf::int64, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_SINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > sint64_to_string_;
  friend struct ::protobuf_protobuf_5ftests_2eproto::TableStruct;
  friend void ::protobuf_protobuf_5ftests_2eproto::InitDefaultsMapMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Nested

// required string str = 1;
inline bool Nested::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Nested::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Nested::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Nested::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Nested::str() const {
  // @@protoc_insertion_point(field_get:tests.Nested.str)
  return str_.GetNoArena();
}
inline void Nested::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Nested.str)
}
#if LANG_CXX11
inline void Nested::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Nested.str)
}
#endif
inline void Nested::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Nested.str)
}
inline void Nested::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Nested.str)
}
inline ::std::string* Nested::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:tests.Nested.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nested::release_str() {
  // @@protoc_insertion_point(field_release:tests.Nested.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nested::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:tests.Nested.str)
}

// optional string optional_str = 2;
inline bool Nested::has_optional_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Nested::set_has_optional_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Nested::clear_has_optional_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Nested::clear_optional_str() {
  optional_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_str();
}
inline const ::std::string& Nested::optional_str() const {
  // @@protoc_insertion_point(field_get:tests.Nested.optional_str)
  return optional_str_.GetNoArena();
}
inline void Nested::set_optional_str(const ::std::string& value) {
  set_has_optional_str();
  optional_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Nested.optional_str)
}
#if LANG_CXX11
inline void Nested::set_optional_str(::std::string&& value) {
  set_has_optional_str();
  optional_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Nested.optional_str)
}
#endif
inline void Nested::set_optional_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_optional_str();
  optional_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Nested.optional_str)
}
inline void Nested::set_optional_str(const char* value, size_t size) {
  set_has_optional_str();
  optional_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Nested.optional_str)
}
inline ::std::string* Nested::mutable_optional_str() {
  set_has_optional_str();
  // @@protoc_insertion_point(field_mutable:tests.Nested.optional_str)
  return optional_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Nested::release_optional_str() {
  // @@protoc_insertion_point(field_release:tests.Nested.optional_str)
  clear_has_optional_str();
  return optional_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Nested::set_allocated_optional_str(::std::string* optional_str) {
  if (optional_str != NULL) {
    set_has_optional_str();
  } else {
    clear_has_optional_str();
  }
  optional_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_str);
  // @@protoc_insertion_point(field_set_allocated:tests.Nested.optional_str)
}

// repeated string repeated_str = 3;
inline int Nested::repeated_str_size() const {
  return repeated_str_.size();
}
inline void Nested::clear_repeated_str() {
  repeated_str_.Clear();
}
inline const ::std::string& Nested::repeated_str(int index) const {
  // @@protoc_insertion_point(field_get:tests.Nested.repeated_str)
  return repeated_str_.Get(index);
}
inline ::std::string* Nested::mutable_repeated_str(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Nested.repeated_str)
  return repeated_str_.Mutable(index);
}
inline void Nested::set_repeated_str(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Nested.repeated_str)
  repeated_str_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Nested::set_repeated_str(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tests.Nested.repeated_str)
  repeated_str_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Nested::set_repeated_str(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_str_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Nested.repeated_str)
}
inline void Nested::set_repeated_str(int index, const char* value, size_t size) {
  repeated_str_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Nested.repeated_str)
}
inline ::std::string* Nested::add_repeated_str() {
  // @@protoc_insertion_point(field_add_mutable:tests.Nested.repeated_str)
  return repeated_str_.Add();
}
inline void Nested::add_repeated_str(const ::std::string& value) {
  repeated_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Nested.repeated_str)
}
#if LANG_CXX11
inline void Nested::add_repeated_str(::std::string&& value) {
  repeated_str_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tests.Nested.repeated_str)
}
#endif
inline void Nested::add_repeated_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_str_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Nested.repeated_str)
}
inline void Nested::add_repeated_str(const char* value, size_t size) {
  repeated_str_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Nested.repeated_str)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Nested::repeated_str() const {
  // @@protoc_insertion_point(field_list:tests.Nested.repeated_str)
  return repeated_str_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Nested::mutable_repeated_str() {
  // @@protoc_insertion_point(field_mutable_list:tests.Nested.repeated_str)
  return &repeated_str_;
}

// -------------------------------------------------------------------

// SimpleMessage

// required string id = 1;
inline bool SimpleMessage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleMessage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& SimpleMessage::id() const {
  // @@protoc_insertion_point(field_get:tests.SimpleMessage.id)
  return id_.GetNoArena();
}
inline void SimpleMessage::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.SimpleMessage.id)
}
#if LANG_CXX11
inline void SimpleMessage::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.SimpleMessage.id)
}
#endif
inline void SimpleMessage::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.SimpleMessage.id)
}
inline void SimpleMessage::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.SimpleMessage.id)
}
inline ::std::string* SimpleMessage::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:tests.SimpleMessage.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimpleMessage::release_id() {
  // @@protoc_insertion_point(field_release:tests.SimpleMessage.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimpleMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:tests.SimpleMessage.id)
}

// repeated int32 numbers = 2;
inline int SimpleMessage::numbers_size() const {
  return numbers_.size();
}
inline void SimpleMessage::clear_numbers() {
  numbers_.Clear();
}
inline ::google::protobuf::int32 SimpleMessage::numbers(int index) const {
  // @@protoc_insertion_point(field_get:tests.SimpleMessage.numbers)
  return numbers_.Get(index);
}
inline void SimpleMessage::set_numbers(int index, ::google::protobuf::int32 value) {
  numbers_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.SimpleMessage.numbers)
}
inline void SimpleMessage::add_numbers(::google::protobuf::int32 value) {
  numbers_.Add(value);
  // @@protoc_insertion_point(field_add:tests.SimpleMessage.numbers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SimpleMessage::numbers() const {
  // @@protoc_insertion_point(field_list:tests.SimpleMessage.numbers)
  return numbers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SimpleMessage::mutable_numbers() {
  // @@protoc_insertion_point(field_mutable_list:tests.SimpleMessage.numbers)
  return &numbers_;
}

// -------------------------------------------------------------------

// Message

// required bool b = 26;
inline bool Message::has_b() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Message::set_has_b() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Message::clear_has_b() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Message::clear_b() {
  b_ = false;
  clear_has_b();
}
inline bool Message::b() const {
  // @@protoc_insertion_point(field_get:tests.Message.b)
  return b_;
}
inline void Message::set_b(bool value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.b)
}

// required string str = 1;
inline bool Message::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& Message::str() const {
  // @@protoc_insertion_point(field_get:tests.Message.str)
  return str_.GetNoArena();
}
inline void Message::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Message.str)
}
#if LANG_CXX11
inline void Message::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Message.str)
}
#endif
inline void Message::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Message.str)
}
inline void Message::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Message.str)
}
inline ::std::string* Message::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:tests.Message.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_str() {
  // @@protoc_insertion_point(field_release:tests.Message.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:tests.Message.str)
}

// required bytes bytes = 2;
inline bool Message::has_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes();
}
inline const ::std::string& Message::bytes() const {
  // @@protoc_insertion_point(field_get:tests.Message.bytes)
  return bytes_.GetNoArena();
}
inline void Message::set_bytes(const ::std::string& value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Message.bytes)
}
#if LANG_CXX11
inline void Message::set_bytes(::std::string&& value) {
  set_has_bytes();
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tests.Message.bytes)
}
#endif
inline void Message::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Message.bytes)
}
inline void Message::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Message.bytes)
}
inline ::std::string* Message::mutable_bytes() {
  set_has_bytes();
  // @@protoc_insertion_point(field_mutable:tests.Message.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_bytes() {
  // @@protoc_insertion_point(field_release:tests.Message.bytes)
  clear_has_bytes();
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    set_has_bytes();
  } else {
    clear_has_bytes();
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:tests.Message.bytes)
}

// optional int32 int32 = 3;
inline bool Message::has_int32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_int32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_int32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_int32() {
  int32_ = 0;
  clear_has_int32();
}
inline ::google::protobuf::int32 Message::int32() const {
  // @@protoc_insertion_point(field_get:tests.Message.int32)
  return int32_;
}
inline void Message::set_int32(::google::protobuf::int32 value) {
  set_has_int32();
  int32_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.int32)
}

// optional int64 int64 = 4;
inline bool Message::has_int64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_int64() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_int64() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_int64() {
  int64_ = GOOGLE_LONGLONG(0);
  clear_has_int64();
}
inline ::google::protobuf::int64 Message::int64() const {
  // @@protoc_insertion_point(field_get:tests.Message.int64)
  return int64_;
}
inline void Message::set_int64(::google::protobuf::int64 value) {
  set_has_int64();
  int64_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.int64)
}

// optional uint32 uint32 = 5;
inline bool Message::has_uint32() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_uint32() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_uint32() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_uint32() {
  uint32_ = 0u;
  clear_has_uint32();
}
inline ::google::protobuf::uint32 Message::uint32() const {
  // @@protoc_insertion_point(field_get:tests.Message.uint32)
  return uint32_;
}
inline void Message::set_uint32(::google::protobuf::uint32 value) {
  set_has_uint32();
  uint32_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.uint32)
}

// optional uint64 uint64 = 6;
inline bool Message::has_uint64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Message::set_has_uint64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Message::clear_has_uint64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Message::clear_uint64() {
  uint64_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64();
}
inline ::google::protobuf::uint64 Message::uint64() const {
  // @@protoc_insertion_point(field_get:tests.Message.uint64)
  return uint64_;
}
inline void Message::set_uint64(::google::protobuf::uint64 value) {
  set_has_uint64();
  uint64_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.uint64)
}

// optional sint32 sint32 = 7;
inline bool Message::has_sint32() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Message::set_has_sint32() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Message::clear_has_sint32() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Message::clear_sint32() {
  sint32_ = 0;
  clear_has_sint32();
}
inline ::google::protobuf::int32 Message::sint32() const {
  // @@protoc_insertion_point(field_get:tests.Message.sint32)
  return sint32_;
}
inline void Message::set_sint32(::google::protobuf::int32 value) {
  set_has_sint32();
  sint32_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.sint32)
}

// optional sint64 sint64 = 8;
inline bool Message::has_sint64() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Message::set_has_sint64() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Message::clear_has_sint64() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Message::clear_sint64() {
  sint64_ = GOOGLE_LONGLONG(0);
  clear_has_sint64();
}
inline ::google::protobuf::int64 Message::sint64() const {
  // @@protoc_insertion_point(field_get:tests.Message.sint64)
  return sint64_;
}
inline void Message::set_sint64(::google::protobuf::int64 value) {
  set_has_sint64();
  sint64_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.sint64)
}

// required float f = 9;
inline bool Message::has_f() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Message::set_has_f() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Message::clear_has_f() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Message::clear_f() {
  f_ = 0;
  clear_has_f();
}
inline float Message::f() const {
  // @@protoc_insertion_point(field_get:tests.Message.f)
  return f_;
}
inline void Message::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.f)
}

// required double d = 10;
inline bool Message::has_d() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Message::set_has_d() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Message::clear_has_d() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Message::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline double Message::d() const {
  // @@protoc_insertion_point(field_get:tests.Message.d)
  return d_;
}
inline void Message::set_d(double value) {
  set_has_d();
  d_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.d)
}

// required .tests.Enum e = 11;
inline bool Message::has_e() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Message::set_has_e() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Message::clear_has_e() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Message::clear_e() {
  e_ = 0;
  clear_has_e();
}
inline ::tests::Enum Message::e() const {
  // @@protoc_insertion_point(field_get:tests.Message.e)
  return static_cast< ::tests::Enum >(e_);
}
inline void Message::set_e(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  set_has_e();
  e_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.e)
}

// required .tests.Nested nested = 12;
inline bool Message::has_nested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_nested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_nested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_nested() {
  if (nested_ != NULL) nested_->Clear();
  clear_has_nested();
}
inline const ::tests::Nested& Message::nested() const {
  const ::tests::Nested* p = nested_;
  // @@protoc_insertion_point(field_get:tests.Message.nested)
  return p != NULL ? *p : *reinterpret_cast<const ::tests::Nested*>(
      &::tests::_Nested_default_instance_);
}
inline ::tests::Nested* Message::release_nested() {
  // @@protoc_insertion_point(field_release:tests.Message.nested)
  clear_has_nested();
  ::tests::Nested* temp = nested_;
  nested_ = NULL;
  return temp;
}
inline ::tests::Nested* Message::mutable_nested() {
  set_has_nested();
  if (nested_ == NULL) {
    nested_ = new ::tests::Nested;
  }
  // @@protoc_insertion_point(field_mutable:tests.Message.nested)
  return nested_;
}
inline void Message::set_allocated_nested(::tests::Nested* nested) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nested_;
  }
  if (nested) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nested = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nested, submessage_arena);
    }
    set_has_nested();
  } else {
    clear_has_nested();
  }
  nested_ = nested;
  // @@protoc_insertion_point(field_set_allocated:tests.Message.nested)
}

// repeated bool repeated_bool = 27;
inline int Message::repeated_bool_size() const {
  return repeated_bool_.size();
}
inline void Message::clear_repeated_bool() {
  repeated_bool_.Clear();
}
inline bool Message::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_bool)
  return repeated_bool_.Get(index);
}
inline void Message::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_bool)
}
inline void Message::add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_bool)
}
inline const ::google::protobuf::RepeatedField< bool >&
Message::repeated_bool() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_bool)
  return repeated_bool_;
}
inline ::google::protobuf::RepeatedField< bool >*
Message::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_bool)
  return &repeated_bool_;
}

// repeated string repeated_string = 13;
inline int Message::repeated_string_size() const {
  return repeated_string_.size();
}
inline void Message::clear_repeated_string() {
  repeated_string_.Clear();
}
inline const ::std::string& Message::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_string)
  return repeated_string_.Get(index);
}
inline ::std::string* Message::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.repeated_string)
  return repeated_string_.Mutable(index);
}
inline void Message::set_repeated_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Message.repeated_string)
  repeated_string_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Message::set_repeated_string(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tests.Message.repeated_string)
  repeated_string_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Message::set_repeated_string(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Message.repeated_string)
}
inline void Message::set_repeated_string(int index, const char* value, size_t size) {
  repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Message.repeated_string)
}
inline ::std::string* Message::add_repeated_string() {
  // @@protoc_insertion_point(field_add_mutable:tests.Message.repeated_string)
  return repeated_string_.Add();
}
inline void Message::add_repeated_string(const ::std::string& value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_string)
}
#if LANG_CXX11
inline void Message::add_repeated_string(::std::string&& value) {
  repeated_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tests.Message.repeated_string)
}
#endif
inline void Message::add_repeated_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Message.repeated_string)
}
inline void Message::add_repeated_string(const char* value, size_t size) {
  repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Message.repeated_string)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message::repeated_string() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_string)
  return repeated_string_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_string)
  return &repeated_string_;
}

// repeated bytes repeated_bytes = 14;
inline int Message::repeated_bytes_size() const {
  return repeated_bytes_.size();
}
inline void Message::clear_repeated_bytes() {
  repeated_bytes_.Clear();
}
inline const ::std::string& Message::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_bytes)
  return repeated_bytes_.Get(index);
}
inline ::std::string* Message::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.repeated_bytes)
  return repeated_bytes_.Mutable(index);
}
inline void Message::set_repeated_bytes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Message.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Message::set_repeated_bytes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tests.Message.repeated_bytes)
  repeated_bytes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Message::set_repeated_bytes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Message.repeated_bytes)
}
inline void Message::set_repeated_bytes(int index, const void* value, size_t size) {
  repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Message.repeated_bytes)
}
inline ::std::string* Message::add_repeated_bytes() {
  // @@protoc_insertion_point(field_add_mutable:tests.Message.repeated_bytes)
  return repeated_bytes_.Add();
}
inline void Message::add_repeated_bytes(const ::std::string& value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_bytes)
}
#if LANG_CXX11
inline void Message::add_repeated_bytes(::std::string&& value) {
  repeated_bytes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tests.Message.repeated_bytes)
}
#endif
inline void Message::add_repeated_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Message.repeated_bytes)
}
inline void Message::add_repeated_bytes(const void* value, size_t size) {
  repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Message.repeated_bytes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_bytes)
  return repeated_bytes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_bytes)
  return &repeated_bytes_;
}

// repeated int32 repeated_int32 = 15;
inline int Message::repeated_int32_size() const {
  return repeated_int32_.size();
}
inline void Message::clear_repeated_int32() {
  repeated_int32_.Clear();
}
inline ::google::protobuf::int32 Message::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_int32)
  return repeated_int32_.Get(index);
}
inline void Message::set_repeated_int32(int index, ::google::protobuf::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_int32)
}
inline void Message::add_repeated_int32(::google::protobuf::int32 value) {
  repeated_int32_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_int32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message::repeated_int32() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_int32)
  return repeated_int32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_int32)
  return &repeated_int32_;
}

// repeated int64 repeated_int64 = 16;
inline int Message::repeated_int64_size() const {
  return repeated_int64_.size();
}
inline void Message::clear_repeated_int64() {
  repeated_int64_.Clear();
}
inline ::google::protobuf::int64 Message::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_int64)
  return repeated_int64_.Get(index);
}
inline void Message::set_repeated_int64(int index, ::google::protobuf::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_int64)
}
inline void Message::add_repeated_int64(::google::protobuf::int64 value) {
  repeated_int64_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_int64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Message::repeated_int64() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_int64)
  return repeated_int64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Message::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_int64)
  return &repeated_int64_;
}

// repeated uint32 repeated_uint32 = 17;
inline int Message::repeated_uint32_size() const {
  return repeated_uint32_.size();
}
inline void Message::clear_repeated_uint32() {
  repeated_uint32_.Clear();
}
inline ::google::protobuf::uint32 Message::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_uint32)
  return repeated_uint32_.Get(index);
}
inline void Message::set_repeated_uint32(int index, ::google::protobuf::uint32 value) {
  repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_uint32)
}
inline void Message::add_repeated_uint32(::google::protobuf::uint32 value) {
  repeated_uint32_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_uint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Message::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_uint32)
  return repeated_uint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Message::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_uint32)
  return &repeated_uint32_;
}

// repeated uint64 repeated_uint64 = 18;
inline int Message::repeated_uint64_size() const {
  return repeated_uint64_.size();
}
inline void Message::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
inline ::google::protobuf::uint64 Message::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_uint64)
  return repeated_uint64_.Get(index);
}
inline void Message::set_repeated_uint64(int index, ::google::protobuf::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_uint64)
}
inline void Message::add_repeated_uint64(::google::protobuf::uint64 value) {
  repeated_uint64_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_uint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Message::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_uint64)
  return repeated_uint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Message::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_uint64)
  return &repeated_uint64_;
}

// repeated sint32 repeated_sint32 = 19;
inline int Message::repeated_sint32_size() const {
  return repeated_sint32_.size();
}
inline void Message::clear_repeated_sint32() {
  repeated_sint32_.Clear();
}
inline ::google::protobuf::int32 Message::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_sint32)
  return repeated_sint32_.Get(index);
}
inline void Message::set_repeated_sint32(int index, ::google::protobuf::int32 value) {
  repeated_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_sint32)
}
inline void Message::add_repeated_sint32(::google::protobuf::int32 value) {
  repeated_sint32_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_sint32)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message::repeated_sint32() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_sint32)
  return repeated_sint32_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message::mutable_repeated_sint32() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_sint32)
  return &repeated_sint32_;
}

// repeated sint64 repeated_sint64 = 20;
inline int Message::repeated_sint64_size() const {
  return repeated_sint64_.size();
}
inline void Message::clear_repeated_sint64() {
  repeated_sint64_.Clear();
}
inline ::google::protobuf::int64 Message::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_sint64)
  return repeated_sint64_.Get(index);
}
inline void Message::set_repeated_sint64(int index, ::google::protobuf::int64 value) {
  repeated_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_sint64)
}
inline void Message::add_repeated_sint64(::google::protobuf::int64 value) {
  repeated_sint64_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_sint64)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Message::repeated_sint64() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_sint64)
  return repeated_sint64_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Message::mutable_repeated_sint64() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_sint64)
  return &repeated_sint64_;
}

// repeated float repeated_float = 21;
inline int Message::repeated_float_size() const {
  return repeated_float_.size();
}
inline void Message::clear_repeated_float() {
  repeated_float_.Clear();
}
inline float Message::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_float)
  return repeated_float_.Get(index);
}
inline void Message::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_float)
}
inline void Message::add_repeated_float(float value) {
  repeated_float_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_float)
}
inline const ::google::protobuf::RepeatedField< float >&
Message::repeated_float() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_float)
  return repeated_float_;
}
inline ::google::protobuf::RepeatedField< float >*
Message::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_float)
  return &repeated_float_;
}

// repeated double repeated_double = 22;
inline int Message::repeated_double_size() const {
  return repeated_double_.size();
}
inline void Message::clear_repeated_double() {
  repeated_double_.Clear();
}
inline double Message::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_double)
  return repeated_double_.Get(index);
}
inline void Message::set_repeated_double(int index, double value) {
  repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_double)
}
inline void Message::add_repeated_double(double value) {
  repeated_double_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_double)
}
inline const ::google::protobuf::RepeatedField< double >&
Message::repeated_double() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_double)
  return repeated_double_;
}
inline ::google::protobuf::RepeatedField< double >*
Message::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_double)
  return &repeated_double_;
}

// repeated .tests.Enum repeated_enum = 23;
inline int Message::repeated_enum_size() const {
  return repeated_enum_.size();
}
inline void Message::clear_repeated_enum() {
  repeated_enum_.Clear();
}
inline ::tests::Enum Message::repeated_enum(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_enum)
  return static_cast< ::tests::Enum >(repeated_enum_.Get(index));
}
inline void Message::set_repeated_enum(int index, ::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  repeated_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.Message.repeated_enum)
}
inline void Message::add_repeated_enum(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  repeated_enum_.Add(value);
  // @@protoc_insertion_point(field_add:tests.Message.repeated_enum)
}
inline const ::google::protobuf::RepeatedField<int>&
Message::repeated_enum() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_enum)
  return repeated_enum_;
}
inline ::google::protobuf::RepeatedField<int>*
Message::mutable_repeated_enum() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_enum)
  return &repeated_enum_;
}

// repeated .tests.Nested repeated_nested = 24;
inline int Message::repeated_nested_size() const {
  return repeated_nested_.size();
}
inline void Message::clear_repeated_nested() {
  repeated_nested_.Clear();
}
inline const ::tests::Nested& Message::repeated_nested(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.repeated_nested)
  return repeated_nested_.Get(index);
}
inline ::tests::Nested* Message::mutable_repeated_nested(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.repeated_nested)
  return repeated_nested_.Mutable(index);
}
inline ::tests::Nested* Message::add_repeated_nested() {
  // @@protoc_insertion_point(field_add:tests.Message.repeated_nested)
  return repeated_nested_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tests::Nested >*
Message::mutable_repeated_nested() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.repeated_nested)
  return &repeated_nested_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tests::Nested >&
Message::repeated_nested() const {
  // @@protoc_insertion_point(field_list:tests.Message.repeated_nested)
  return repeated_nested_;
}

// repeated string empty = 25;
inline int Message::empty_size() const {
  return empty_.size();
}
inline void Message::clear_empty() {
  empty_.Clear();
}
inline const ::std::string& Message::empty(int index) const {
  // @@protoc_insertion_point(field_get:tests.Message.empty)
  return empty_.Get(index);
}
inline ::std::string* Message::mutable_empty(int index) {
  // @@protoc_insertion_point(field_mutable:tests.Message.empty)
  return empty_.Mutable(index);
}
inline void Message::set_empty(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tests.Message.empty)
  empty_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Message::set_empty(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tests.Message.empty)
  empty_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Message::set_empty(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  empty_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tests.Message.empty)
}
inline void Message::set_empty(int index, const char* value, size_t size) {
  empty_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tests.Message.empty)
}
inline ::std::string* Message::add_empty() {
  // @@protoc_insertion_point(field_add_mutable:tests.Message.empty)
  return empty_.Add();
}
inline void Message::add_empty(const ::std::string& value) {
  empty_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tests.Message.empty)
}
#if LANG_CXX11
inline void Message::add_empty(::std::string&& value) {
  empty_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tests.Message.empty)
}
#endif
inline void Message::add_empty(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  empty_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tests.Message.empty)
}
inline void Message::add_empty(const char* value, size_t size) {
  empty_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tests.Message.empty)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Message::empty() const {
  // @@protoc_insertion_point(field_list:tests.Message.empty)
  return empty_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Message::mutable_empty() {
  // @@protoc_insertion_point(field_mutable_list:tests.Message.empty)
  return &empty_;
}

// optional double optional_default = 28 [default = 42];
inline bool Message::has_optional_default() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Message::set_has_optional_default() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Message::clear_has_optional_default() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Message::clear_optional_default() {
  optional_default_ = 42;
  clear_has_optional_default();
}
inline double Message::optional_default() const {
  // @@protoc_insertion_point(field_get:tests.Message.optional_default)
  return optional_default_;
}
inline void Message::set_optional_default(double value) {
  set_has_optional_default();
  optional_default_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.optional_default)
}

// optional double optional_no_default = 29;
inline bool Message::has_optional_no_default() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Message::set_has_optional_no_default() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Message::clear_has_optional_no_default() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Message::clear_optional_no_default() {
  optional_no_default_ = 0;
  clear_has_optional_no_default();
}
inline double Message::optional_no_default() const {
  // @@protoc_insertion_point(field_get:tests.Message.optional_no_default)
  return optional_no_default_;
}
inline void Message::set_optional_no_default(double value) {
  set_has_optional_no_default();
  optional_no_default_ = value;
  // @@protoc_insertion_point(field_set:tests.Message.optional_no_default)
}

// -------------------------------------------------------------------

// ArrayMessage

// repeated .tests.SimpleMessage values = 1;
inline int ArrayMessage::values_size() const {
  return values_.size();
}
inline void ArrayMessage::clear_values() {
  values_.Clear();
}
inline const ::tests::SimpleMessage& ArrayMessage::values(int index) const {
  // @@protoc_insertion_point(field_get:tests.ArrayMessage.values)
  return values_.Get(index);
}
inline ::tests::SimpleMessage* ArrayMessage::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:tests.ArrayMessage.values)
  return values_.Mutable(index);
}
inline ::tests::SimpleMessage* ArrayMessage::add_values() {
  // @@protoc_insertion_point(field_add:tests.ArrayMessage.values)
  return values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >*
ArrayMessage::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:tests.ArrayMessage.values)
  return &values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tests::SimpleMessage >&
ArrayMessage::values() const {
  // @@protoc_insertion_point(field_list:tests.ArrayMessage.values)
  return values_;
}

// -------------------------------------------------------------------

// EnumMessage

// optional .tests.Enum e1 = 1;
inline bool EnumMessage::has_e1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnumMessage::set_has_e1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnumMessage::clear_has_e1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnumMessage::clear_e1() {
  e1_ = 0;
  clear_has_e1();
}
inline ::tests::Enum EnumMessage::e1() const {
  // @@protoc_insertion_point(field_get:tests.EnumMessage.e1)
  return static_cast< ::tests::Enum >(e1_);
}
inline void EnumMessage::set_e1(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  set_has_e1();
  e1_ = value;
  // @@protoc_insertion_point(field_set:tests.EnumMessage.e1)
}

// optional .tests.Enum e2 = 2;
inline bool EnumMessage::has_e2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnumMessage::set_has_e2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnumMessage::clear_has_e2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnumMessage::clear_e2() {
  e2_ = 0;
  clear_has_e2();
}
inline ::tests::Enum EnumMessage::e2() const {
  // @@protoc_insertion_point(field_get:tests.EnumMessage.e2)
  return static_cast< ::tests::Enum >(e2_);
}
inline void EnumMessage::set_e2(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  set_has_e2();
  e2_ = value;
  // @@protoc_insertion_point(field_set:tests.EnumMessage.e2)
}

// repeated .tests.Enum repeated_enum = 3;
inline int EnumMessage::repeated_enum_size() const {
  return repeated_enum_.size();
}
inline void EnumMessage::clear_repeated_enum() {
  repeated_enum_.Clear();
}
inline ::tests::Enum EnumMessage::repeated_enum(int index) const {
  // @@protoc_insertion_point(field_get:tests.EnumMessage.repeated_enum)
  return static_cast< ::tests::Enum >(repeated_enum_.Get(index));
}
inline void EnumMessage::set_repeated_enum(int index, ::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  repeated_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:tests.EnumMessage.repeated_enum)
}
inline void EnumMessage::add_repeated_enum(::tests::Enum value) {
  assert(::tests::Enum_IsValid(value));
  repeated_enum_.Add(value);
  // @@protoc_insertion_point(field_add:tests.EnumMessage.repeated_enum)
}
inline const ::google::protobuf::RepeatedField<int>&
EnumMessage::repeated_enum() const {
  // @@protoc_insertion_point(field_list:tests.EnumMessage.repeated_enum)
  return repeated_enum_;
}
inline ::google::protobuf::RepeatedField<int>*
EnumMessage::mutable_repeated_enum() {
  // @@protoc_insertion_point(field_mutable_list:tests.EnumMessage.repeated_enum)
  return &repeated_enum_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MapMessage

// map<string, string> string_to_string = 1;
inline int MapMessage::string_to_string_size() const {
  return string_to_string_.size();
}
inline void MapMessage::clear_string_to_string() {
  string_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
MapMessage::string_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_string)
  return string_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
MapMessage::mutable_string_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_string)
  return string_to_string_.MutableMap();
}

// map<string, bool> string_to_bool = 2;
inline int MapMessage::string_to_bool_size() const {
  return string_to_bool_.size();
}
inline void MapMessage::clear_string_to_bool() {
  string_to_bool_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
MapMessage::string_to_bool() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_bool)
  return string_to_bool_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
MapMessage::mutable_string_to_bool() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_bool)
  return string_to_bool_.MutableMap();
}

// map<string, bytes> string_to_bytes = 3;
inline int MapMessage::string_to_bytes_size() const {
  return string_to_bytes_.size();
}
inline void MapMessage::clear_string_to_bytes() {
  string_to_bytes_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
MapMessage::string_to_bytes() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_bytes)
  return string_to_bytes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
MapMessage::mutable_string_to_bytes() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_bytes)
  return string_to_bytes_.MutableMap();
}

// map<string, int32> string_to_int32 = 4;
inline int MapMessage::string_to_int32_size() const {
  return string_to_int32_.size();
}
inline void MapMessage::clear_string_to_int32() {
  string_to_int32_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
MapMessage::string_to_int32() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_int32)
  return string_to_int32_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
MapMessage::mutable_string_to_int32() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_int32)
  return string_to_int32_.MutableMap();
}

// map<string, int64> string_to_int64 = 5;
inline int MapMessage::string_to_int64_size() const {
  return string_to_int64_.size();
}
inline void MapMessage::clear_string_to_int64() {
  string_to_int64_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
MapMessage::string_to_int64() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_int64)
  return string_to_int64_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
MapMessage::mutable_string_to_int64() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_int64)
  return string_to_int64_.MutableMap();
}

// map<string, uint32> string_to_uint32 = 6;
inline int MapMessage::string_to_uint32_size() const {
  return string_to_uint32_.size();
}
inline void MapMessage::clear_string_to_uint32() {
  string_to_uint32_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
MapMessage::string_to_uint32() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_uint32)
  return string_to_uint32_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
MapMessage::mutable_string_to_uint32() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_uint32)
  return string_to_uint32_.MutableMap();
}

// map<string, uint64> string_to_uint64 = 7;
inline int MapMessage::string_to_uint64_size() const {
  return string_to_uint64_.size();
}
inline void MapMessage::clear_string_to_uint64() {
  string_to_uint64_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
MapMessage::string_to_uint64() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_uint64)
  return string_to_uint64_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
MapMessage::mutable_string_to_uint64() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_uint64)
  return string_to_uint64_.MutableMap();
}

// map<string, sint32> string_to_sint32 = 8;
inline int MapMessage::string_to_sint32_size() const {
  return string_to_sint32_.size();
}
inline void MapMessage::clear_string_to_sint32() {
  string_to_sint32_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
MapMessage::string_to_sint32() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_sint32)
  return string_to_sint32_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
MapMessage::mutable_string_to_sint32() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_sint32)
  return string_to_sint32_.MutableMap();
}

// map<string, sint64> string_to_sint64 = 9;
inline int MapMessage::string_to_sint64_size() const {
  return string_to_sint64_.size();
}
inline void MapMessage::clear_string_to_sint64() {
  string_to_sint64_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
MapMessage::string_to_sint64() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_sint64)
  return string_to_sint64_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
MapMessage::mutable_string_to_sint64() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_sint64)
  return string_to_sint64_.MutableMap();
}

// map<string, float> string_to_float = 10;
inline int MapMessage::string_to_float_size() const {
  return string_to_float_.size();
}
inline void MapMessage::clear_string_to_float() {
  string_to_float_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, float >&
MapMessage::string_to_float() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_float)
  return string_to_float_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, float >*
MapMessage::mutable_string_to_float() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_float)
  return string_to_float_.MutableMap();
}

// map<string, double> string_to_double = 11;
inline int MapMessage::string_to_double_size() const {
  return string_to_double_.size();
}
inline void MapMessage::clear_string_to_double() {
  string_to_double_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
MapMessage::string_to_double() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_double)
  return string_to_double_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
MapMessage::mutable_string_to_double() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_double)
  return string_to_double_.MutableMap();
}

// map<string, .tests.Enum> string_to_enum = 12;
inline int MapMessage::string_to_enum_size() const {
  return string_to_enum_.size();
}
inline void MapMessage::clear_string_to_enum() {
  string_to_enum_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tests::Enum >&
MapMessage::string_to_enum() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_enum)
  return string_to_enum_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tests::Enum >*
MapMessage::mutable_string_to_enum() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_enum)
  return string_to_enum_.MutableMap();
}

// map<string, .tests.Nested> string_to_nested = 13;
inline int MapMessage::string_to_nested_size() const {
  return string_to_nested_.size();
}
inline void MapMessage::clear_string_to_nested() {
  string_to_nested_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::tests::Nested >&
MapMessage::string_to_nested() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.string_to_nested)
  return string_to_nested_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::tests::Nested >*
MapMessage::mutable_string_to_nested() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.string_to_nested)
  return string_to_nested_.MutableMap();
}

// map<bool, string> bool_to_string = 14;
inline int MapMessage::bool_to_string_size() const {
  return bool_to_string_.size();
}
inline void MapMessage::clear_bool_to_string() {
  bool_to_string_.Clear();
}
inline const ::google::protobuf::Map< bool, ::std::string >&
MapMessage::bool_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.bool_to_string)
  return bool_to_string_.GetMap();
}
inline ::google::protobuf::Map< bool, ::std::string >*
MapMessage::mutable_bool_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.bool_to_string)
  return bool_to_string_.MutableMap();
}

// map<int32, string> int32_to_string = 15;
inline int MapMessage::int32_to_string_size() const {
  return int32_to_string_.size();
}
inline void MapMessage::clear_int32_to_string() {
  int32_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
MapMessage::int32_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.int32_to_string)
  return int32_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
MapMessage::mutable_int32_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.int32_to_string)
  return int32_to_string_.MutableMap();
}

// map<int64, string> int64_to_string = 16;
inline int MapMessage::int64_to_string_size() const {
  return int64_to_string_.size();
}
inline void MapMessage::clear_int64_to_string() {
  int64_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
MapMessage::int64_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.int64_to_string)
  return int64_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
MapMessage::mutable_int64_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.int64_to_string)
  return int64_to_string_.MutableMap();
}

// map<uint32, string> uint32_to_string = 17;
inline int MapMessage::uint32_to_string_size() const {
  return uint32_to_string_.size();
}
inline void MapMessage::clear_uint32_to_string() {
  uint32_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
MapMessage::uint32_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.uint32_to_string)
  return uint32_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
MapMessage::mutable_uint32_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.uint32_to_string)
  return uint32_to_string_.MutableMap();
}

// map<uint64, string> uint64_to_string = 18;
inline int MapMessage::uint64_to_string_size() const {
  return uint64_to_string_.size();
}
inline void MapMessage::clear_uint64_to_string() {
  uint64_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >&
MapMessage::uint64_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.uint64_to_string)
  return uint64_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string >*
MapMessage::mutable_uint64_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.uint64_to_string)
  return uint64_to_string_.MutableMap();
}

// map<sint32, string> sint32_to_string = 19;
inline int MapMessage::sint32_to_string_size() const {
  return sint32_to_string_.size();
}
inline void MapMessage::clear_sint32_to_string() {
  sint32_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
MapMessage::sint32_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.sint32_to_string)
  return sint32_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
MapMessage::mutable_sint32_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.sint32_to_string)
  return sint32_to_string_.MutableMap();
}

// map<sint64, string> sint64_to_string = 20;
inline int MapMessage::sint64_to_string_size() const {
  return sint64_to_string_.size();
}
inline void MapMessage::clear_sint64_to_string() {
  sint64_to_string_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >&
MapMessage::sint64_to_string() const {
  // @@protoc_insertion_point(field_map:tests.MapMessage.sint64_to_string)
  return sint64_to_string_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::std::string >*
MapMessage::mutable_sint64_to_string() {
  // @@protoc_insertion_point(field_mutable_map:tests.MapMessage.sint64_to_string)
  return sint64_to_string_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tests

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tests::Enum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tests::Enum>() {
  return ::tests::Enum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_5ftests_2eproto__INCLUDED
